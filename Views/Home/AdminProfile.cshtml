@model ProfileModel
@{
    User user = Model.user;
    ICollection<Friend> friends = Model.friends;
}
<head>
    <link rel="stylesheet" href="~/css/profile.css?v=@DateTime.Now.Millisecond">
</head>

<div class="main_div profile">
    <p class="login">@user.Login</p>
    <p class="fio">@user.Fio</p>

    @if (Model.isFriend)
    {
        <div class="about_friend">
            <span>В друзьях</span>
            @using (Html.BeginForm("DeleteFriend", "Home", FormMethod.Post))
            {
                @Html.Hidden("id", user.IdUser)
                <input class="inp_friend inp_delete_friend" type="submit" value="Удалить из друзей" />
            }
        </div>
    }
    else
        @using (Html.BeginForm("AddFriend", "Home", FormMethod.Post))
        {
            @Html.Hidden("id", user.IdUser)
            <input class="inp_friend inp_add_friend" type="submit" value="Добавить в друзья" />
        }

    @using(Html.BeginForm("BlockUser", "Home", FormMethod.Post))
    {
        @Html.Hidden("loginBlock", user.Login)
        <input type="submit" value="Заблокировать"/>
    }
</div>
<div class="main_div friends">
    <p class ="friends_label">Друзья: </p>
    @if(friends.Count > 0)
    {
        foreach (var friend in friends)
        {
            <p class="friend"><a asp-action="Profile" asp-route-login="@friend.FriendNavigation.Login">@friend.FriendNavigation.Login</a></p>
        }
    }
    else
    {
        <p class="friend">Нет друзей</p>
    }

</div>
<div class="about_count">
    <p>Количество сообщений: <span>@Model.countMessages</span></p>
    <p>Количество созданных тем: <span>@Model.countTopics</span></p>
</div>
<div class="about_topics">
    <p class="about_topics_label">Все темы @user.Login:</p>
    <ul>
        @foreach (var topic in user.TopicDiscussions)
        {
            <li>@Html.ActionLink(topic.Name, "Topic", new {id = topic.IdTopic}, null)</li>
        }
    </ul>
</div>

